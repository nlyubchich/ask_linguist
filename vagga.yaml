containers:
  python:
    setup:
    - !Ubuntu trusty
    - !Install [libpq-dev, python3-pkg-resources]
    - !Py3Requirements "requirements.txt"
    environ:
      LC_ALL: en_US.UTF-8
      APP_SETTINGS: 'project.config.VaggaConfig'
      DATABASE_URL: 'postgres://vagga:vagga@localhost:5433/test'
      SECRET_KEY: 'really secret'
      CSRF_SECRET: 'really secret'

  postgres:
    setup:
    - !Ubuntu trusty
    - !Install [postgresql]
    - !EnsureDir /data
    - !EnsureDir /work/.db/data
    environ:
      LC_ALL: en_US.UTF-8
      PG_PORT: 5433
      PG_DB: test
      PG_USER: vagga
      PG_PASSWORD: vagga
      PGDATA: /data
      PG_BIN: /usr/lib/postgresql/9.3/bin
    volumes:
      /data: !BindRW /work/.db/data

  redis:
    setup:
    - !Alpine v3.2
    - !Install [redis]
    environ:
      LC_ALL: en_US.UTF-8

commands:
  make_migrate: !Supervise
    description: Run app
    children:
      service: !Command
        container: python
        run: |
            touch /work/.dbcreation # Create lock file
            while [ -f /work/.dbcreation ]; do sleep 0.2; done # Acquire lock
            python3 manage.py db migrate
      db: !Command
        container: postgres
        run: |
          chown postgres:postgres $PGDATA;
          if [ -z $(ls -A $PGDATA) ]; then
            su postgres -c "$PG_BIN/pg_ctl initdb";
            su postgres -c "echo 'host all all all trust' >> $PGDATA/pg_hba.conf"
            su postgres -c "$PG_BIN/pg_ctl -w -o '-F --port=$PG_PORT -k /tmp' start";
            su postgres -c "$PG_BIN/psql -h 127.0.0.1 -p $PG_PORT -c \"CREATE USER $PG_USER WITH PASSWORD '$PG_PASSWORD';\""
            su postgres -c "$PG_BIN/createdb -h 127.0.0.1 -p $PG_PORT $PG_DB -O $PG_USER";
          else
            su postgres -c "$PG_BIN/pg_ctl -w -o '-F --port=$PG_PORT -k /tmp' start";
          fi
          rm /work/.dbcreation # Release lock
          sleep infinity

  run: !Supervise
    description: Run app
    children:
      service: !Command
        container: python
        run: |
            touch /work/.dbcreation # Create lock file
            while [ -f /work/.dbcreation ]; do sleep 0.2; done # Acquire lock
            python3 manage.py db upgrade
            python3 run.py
      db: !Command
        container: postgres
        run: |
          chown postgres:postgres $PGDATA;
          if [ -z $(ls -A $PGDATA) ]; then
            su postgres -c "$PG_BIN/pg_ctl initdb";
            su postgres -c "echo 'host all all all trust' >> $PGDATA/pg_hba.conf"
            su postgres -c "$PG_BIN/pg_ctl -w -o '-F --port=$PG_PORT -k /tmp' start";
            su postgres -c "$PG_BIN/psql -h 127.0.0.1 -p $PG_PORT -c \"CREATE USER $PG_USER WITH PASSWORD '$PG_PASSWORD';\""
            su postgres -c "$PG_BIN/createdb -h 127.0.0.1 -p $PG_PORT $PG_DB -O $PG_USER";
          else
            su postgres -c "$PG_BIN/pg_ctl -w -o '-F --port=$PG_PORT -k /tmp' start";
          fi
          rm /work/.dbcreation # Release lock
          sleep infinity

      redis_server: !Command
        container: redis
        run: |
          redis-server --version
          redis-server --daemonize no
          sleep infinity
